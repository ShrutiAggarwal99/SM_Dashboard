/**
 * This class is generated by jOOQ
 */
package com.clicdirectory.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataRecord extends org.jooq.impl.TableRecordImpl<com.clicdirectory.tables.records.DataRecord> implements org.jooq.Record2<java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -1231038666;

	/**
	 * Setter for <code>public.data.image</code>.
	 */
	public void setImage(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.data.image</code>.
	 */
	public java.lang.String getImage() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>public.data.Album</code>.
	 */
	public void setAlbum(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.data.Album</code>.
	 */
	public java.lang.String getAlbum() {
		return (java.lang.String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return com.clicdirectory.tables.Data.DATA.IMAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.clicdirectory.tables.Data.DATA.ALBUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getImage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getAlbum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataRecord value1(java.lang.String value) {
		setImage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataRecord value2(java.lang.String value) {
		setAlbum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataRecord values(java.lang.String value1, java.lang.String value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DataRecord
	 */
	public DataRecord() {
		super(com.clicdirectory.tables.Data.DATA);
	}

	/**
	 * Create a detached, initialised DataRecord
	 */
	public DataRecord(java.lang.String image, java.lang.String album) {
		super(com.clicdirectory.tables.Data.DATA);

		setValue(0, image);
		setValue(1, album);
	}
}
